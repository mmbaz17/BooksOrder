/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.person.controller;

/**
 *
 * @author Muzamiru.Mbaziira
 */
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import com.person.model.Person;
import com.person.service.PersonService;
import javax.validation.Valid;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import com.person.repository.UserRepository;


@RestController // This means that this class is a Controller
@RequestMapping(path="/api") // This means URL's start with /demo (after Application path)
public class PersonController {
	
	
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  
  @PostMapping(path="/add-new", consumes = MediaType.APPLICATION_JSON_VALUE)
  public ResponseEntity<Void> createUser(@Valid @RequestBody Person user) {
	  userRepository.save(user);
	  return new ResponseEntity<Void>(HttpStatus.CREATED);
	  
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Person> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
}